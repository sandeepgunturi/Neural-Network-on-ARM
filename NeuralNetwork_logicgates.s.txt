     AREA     appcode, CODE, READONLY
     EXPORT __main
	 IMPORT printMsg 	 
	 IMPORT printMsg2p
	 IMPORT printMsg4p
	 IMPORT printMsgnand
	 IMPORT printMsgand
	 IMPORT printMsgnor
	 IMPORT printMsgor
	 IMPORT printMsgnot
			 
	
     ENTRY 
__main  FUNCTION	
; IGNORE THIS PART
		VLDR.F32 s18,=0.5;const
		BL printMsgand;
		B AND_L;

sigmoid	PUSH  {R10, LR}
		VMOV.F32 s0,#10.0;i
		MOV R5,#10;count as i
		VMOV.F32 s5,#1.0;const
		VMOV.F32 s2,#1.0;e^x stored in s2
		
loop	VDIV.F32 s3,s2,s0;
		VMUL.F32 s4,s1,s3;
		VADD.F32 s2,s4,s5;
		VSUB.F32 s0,s0,s5;
		SUB R5,R5,#1;
		CMP R5,#0;
		BNE loop
		VADD.F32 s6,s2,s5;1+e^x
		VDIV.F32 s2,s2,s6;
		SUB LR, #0x01
		POP {R10,PC}
		BX LR;
		
AND_L	VLDR.F32 s7,=-0.1;
		VLDR.F32 s8,=0.2;
		VLDR.F32 s9,=0.2;
		CMP R6,#0;
		BLEQ Data1
		CMP R6,#1;
		BLEQ Data2
		CMP R6,#2;
		BLEQ Data3
		CMP R6,#3;
		BLEQ Data4
		VMUL.F32 s13,s7,s10;
		VMUL.F32 s14,s8,s11;
		VMUL.F32 s15,s9,s12;
		
		VADD.F32 s16,s13,s14;
		VADD.F32 s16,s16,s15;
		VLDR.F32 s17,=-0.2;
		VADD.F32 s16,s16,s17;
		
		VMOV.F32 s1,s16;calculate sigmoid(s14)
		BL sigmoid;s2 has sigmoid value
		VCMP.F32 s2,s18;
		VMRS APSR_nzcv, FPSCR
		BLLT fill_z
		BLGT fill_o
		BL printMsg
		ADD R6,R6,#1;
		CMP R6,#4;
		BLT AND_L 
		MOV R6,#0;
		BL printMsgor
		B OR_L;	
		
Data1	VLDR.F32 s10,=1;
		MOV R0,#1;
		VLDR.F32 s11,=0;
		MOV R1,#0;
		VLDR.F32 s12,=0;
		MOV R2,#0;
		BX LR		
Data2	VLDR.F32 s10,=1;
		MOV R0,#1;
		VLDR.F32 s11,=0;
		MOV R1,#0;
		VLDR.F32 s12,=1;
		MOV R2,#1;
		BX LR
Data3	VLDR.F32 s10,=1;
		MOV R0,#1;
		VLDR.F32 s11,=1;
		MOV R1,#1;
		VLDR.F32 s12,=0;
		MOV R2,#0;
		BX LR
Data4	VLDR.F32 s10,=1;
		MOV R0,#1;
		VLDR.F32 s11,=1;
		MOV R1,#1;
		VLDR.F32 s12,=1;
		MOV R2,#1;
		BX LR

OR_L	VLDR.F32 s7,=-0.1;
		VLDR.F32 s8,=0.7;
		VLDR.F32 s9,=0.7;
		CMP R6,#0;
		BLEQ Data1
		CMP R6,#1;
		BLEQ Data2
		CMP R6,#2;
		BLEQ Data3
		CMP R6,#3;
		BLEQ Data4
		VMUL.F32 s13,s7,s10;
		VMUL.F32 s14,s8,s11;
		VMUL.F32 s15,s9,s12;
		
		VADD.F32 s16,s13,s14;
		VADD.F32 s16,s16,s15;
		VLDR.F32 s17,=-0.1;
		VADD.F32 s16,s16,s17;
		
		VMOV.F32 s1,s16;calculate sigmoid(s14)
		BL sigmoid;s2 has sigmoid value
		VCMP.F32 s2,s18;
		VMRS APSR_nzcv, FPSCR
		BLLT fill_z
		BLGT fill_o
		BL printMsg
		ADD R6,R6,#1;
		CMP R6,#4;
		BLT OR_L 
		MOV R6,#0;
		BL printMsgnand
		B NAND_L;		
		
NAND_L	VLDR.F32 s7,=0.6;
		VLDR.F32 s8,=-0.8;
		VLDR.F32 s9,=-0.8;
		CMP R6,#0;
		BLEQ Data1
		CMP R6,#1;
		BLEQ Data2
		CMP R6,#2;
		BLEQ Data3
		CMP R6,#3;
		BLEQ Data4
		VMUL.F32 s13,s7,s10;
		VMUL.F32 s14,s8,s11;
		VMUL.F32 s15,s9,s12;
		
		VADD.F32 s16,s13,s14;
		VADD.F32 s16,s16,s15;
		VLDR.F32 s17,=0.3;
		VADD.F32 s16,s16,s17;
		
		VMOV.F32 s1,s16;calculate sigmoid(s14)
		BL sigmoid;s2 has sigmoid value
		VCMP.F32 s2,s18;
		VMRS APSR_nzcv, FPSCR
		BLLT fill_z
		BLGT fill_o
		BL printMsg
		ADD R6,R6,#1;
		CMP R6,#4;
		BLT NAND_L 
		MOV R6,#0;
		BL printMsgnor
		B NOR_L;

NOR_L	VLDR.F32 s7,=0.5;
		VLDR.F32 s8,=-0.7;
		VLDR.F32 s9,=-0.7;
		CMP R6,#0;
		BLEQ Data1
		CMP R6,#1;
		BLEQ Data2
		CMP R6,#2;
		BLEQ Data3
		CMP R6,#3;
		BLEQ Data4
		VMUL.F32 s13,s7,s10;
		VMUL.F32 s14,s8,s11;
		VMUL.F32 s15,s9,s12;
		
		VADD.F32 s16,s13,s14;
		VADD.F32 s16,s16,s15;
		VLDR.F32 s17,=0.1;
		VADD.F32 s16,s16,s17;
		
		VMOV.F32 s1,s16;calculate sigmoid(s14)
		BL sigmoid;s2 has sigmoid value
		VCMP.F32 s2,s18;
		VMRS APSR_nzcv, FPSCR
		BLLT fill_z
		BLGT fill_o
		BL printMsg
		ADD R6,R6,#1;
		CMP R6,#4;
		BLT NOR_L 
		MOV R6,#0;
		BL printMsgnot
		B NOT_L;

NOT_L	VLDR.F32 s7,=0.5;*
		VLDR.F32 s8,=0;*
		VLDR.F32 s9,=-0.7;
		CMP R6,#0;
		BLEQ Data1
		CMP R6,#1;
		BLEQ Data2
		;CMP R6,#2;
		;BLEQ Data3
		;CMP R6,#3;
		;BLEQ Data4
		VMUL.F32 s13,s7,s10;
		VMUL.F32 s14,s8,s11;
		VMUL.F32 s15,s9,s12;
		
		VADD.F32 s16,s13,s14;
		VADD.F32 s16,s16,s15;
		VLDR.F32 s17,=0.1;
		VADD.F32 s16,s16,s17;
		
		VMOV.F32 s1,s16;calculate sigmoid(s14)
		BL sigmoid;s2 has sigmoid value
		VCMP.F32 s2,s18;
		VMRS APSR_nzcv, FPSCR
		BLLT fill_z
		BLGT fill_o
		BL printMsg
		ADD R6,R6,#1;
		CMP R6,#2;
		BLT NOT_L 
		MOV R6,#0;
		B stop;



fill_z	PUSH  {R7, LR}
		VLDR.F32 s19,=0;
		MOV R3,#0;
		SUB LR, #0x01
		POP {R7,PC}
		BX LR
		
fill_o	PUSH  {R8, LR}
		VLDR.F32 s19,=1;
		MOV R3,#1;
		SUB LR, #0x01
		POP {R8,PC}
		BX LR


stop B stop ; stop program
     ENDFUNC
	 END

